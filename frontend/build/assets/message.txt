```import styles from "../styles/reviews.module.css";
import ReviewSlide from "../components/ReviewSlide";
import RankingCard from "../components/RankingCard";
import ReviewAddComment from "./ReviewAddNewOne";
import toast from "react-hot-toast";
import { connect } from "react-redux";
import { useState, useEffect } from "react";
import usersActions from "../redux/actions/usersActions";

const Reviews = (props) => {
  const [allReviews, setAllReviews] = useState([]);

  useEffect(() => {
    getReviews();
  }, []);

  const getReviews = async () => {
    setAllReviews(await props.getReviews());
  };
  const inputHandler = (e) => {
    if (!props.token) {
      return toast.error("You most to be login for this", {
        position: "top-right",
        style: {
          borderRadius: "10px",
          background: "#453ab7",
          color: "#fff",
          fontFamily: "Ubuntu, sans-serif",
        },
      });
    } else {
      return (
        <div>
          <ReviewAddComment />
        </div>
      );
    }
  };

  // const renderRate = '' /**prop del ranking general que se vaya alimentando constantemente */

  return (
    <section id="whatTheySaying" className={styles.sectionGames}>
      <h2> WHAT ARE THEY SAYING?</h2>
      <h4 className={styles.subtitleDescription}>
        Memorable moments from other players
      </h4>
      <article className={styles.articleGames}>
        <div>
          <button className={styles.buttonAddComment} onClick={inputHandler}>
            +
          </button>
          {allReviews.length !== 0 &&
            allReviews.map((info, index) => {
              return <ReviewSlide oneReview={info} key={"Review" + index} />;
            })}
        </div>
        <div>
          <RankingCard />
          {props.token && <ReviewAddComment />}
        </div>
      </article>
    </section>
  );
};

const mapStateToProps = (state) => {
  return {
    token: state.users.token,
  };
};

const mapDispatchToProps = {
  getReviews: usersActions.getReviews,
};

export default connect(mapStateToProps, mapDispatchToProps)(Reviews);````